import{_ as e,c as l,a,g as p,e as t,b as o,h as i,o as c,r as u}from"./app-BzmzFw4g.js";const r={};function d(m,n){const s=u("FontIcon");return c(),l("div",null,[n[2]||(n[2]=a("h1",{id:"fonticon",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#fonticon"},[a("span",null,"FontIcon")])],-1)),n[3]||(n[3]=a("p",null,"This component is used to display font icons.",-1)),n[4]||(n[4]=a("p",null,"You can use it in Markdown to add an iconã€‚",-1)),p(" more "),n[5]||(n[5]=a("h2",{id:"demo",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#demo"},[a("span",null,"Demo")])],-1)),a("ul",null,[a("li",null,[a("p",null,[n[0]||(n[0]=t("Home icon: ")),o(s,{icon:"house"})])]),a("li",null,[a("p",null,[n[1]||(n[1]=t("A big and green share icon: ")),o(s,{icon:"share",color:"#3eaf7c",size:"32"})])])]),n[6]||(n[6]=i(`<div class="language-markdown line-numbers-mode" data-highlighter="prismjs" data-ext="md" data-title="md"><pre><code><span class="line"><span class="token list punctuation">-</span> Home icon: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FontIcon</span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>house<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token list punctuation">-</span> A big and green share icon: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FontIcon</span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>share<span class="token punctuation">&quot;</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#3eaf7c<span class="token punctuation">&quot;</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>32<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1))])}const f=e(r,[["render",d],["__file","font-icon.html.vue"]]),v=JSON.parse('{"path":"/demo/font-icon.html","title":"FontIcon","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Demo","slug":"demo","link":"#demo","children":[]}],"git":{"updatedTime":1729532066000,"contributors":[{"name":"Mister-Hope","email":"mister-hope@outlook.com","commits":1}]},"filePathRelative":"demo/font-icon.md"}');export{f as comp,v as data};
